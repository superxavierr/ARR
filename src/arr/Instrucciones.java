/*
ALUMNO: Cazares Godínez Brian Xavier
FECHA: 06 de Abril de 2022
DESCRIPCIÓN: Interfaz de programa del algoritmo de planificación round robin (RR)
 */
package arr;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author brianxavier
 */
public class Instrucciones extends javax.swing.JFrame {

    FondoPanel fondo = new FondoPanel();

    public Instrucciones() {
        //EXPLICAR CÓDIGO (Insertar imagen de fondo)
        this.setContentPane(fondo);
        initComponents();

        //EXPLICAR CÓDIGO (Ajustar la imagen a un botón)
        btn1.setIcon(setIcono("/imagenes/Inicio.png", btn1));
        btn1.setPressedIcon(setIconoPresionado("/imagenes/Inicio.png", btn1, 5, 5));

        //EXPLICAR CÓDIGO (Quitar borde a un botón)
        transparenciaButton();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);
        getContentPane().setLayout(null);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("\t\t\t\t\t       \t  INSTRUCCIONES\nPaso 1: ingresa un número que no supere el límite de 100 en el quantum y la ráfaga.\nPaso 2: presina el botón de \"agregar\".\nPaso 3: si deseas ingresar otro proceso a ejecutar, ingresa otro número en la ráfaga.\nPaso 4: cuando termines presiona el botón de \"iniciar\", de lo contrario. si te equivocaste presiona el botón de \"limpiar\" o \"refrescar\" para empezar con otro número o desde cero.\nPaso 5: espera a que se terminen de ejecutar los procesos, observarás que en la tabla final indicará cuando termine con algún proceso y en la casilla de historial mostrará el número de procesos\ny el tiempo acumulado en el que se van terminando de ejecutar.\nPaso 6: si deseas agregar más procesos presiona refrescar, de lo contrario, si deseas terminar presiona \"cerrar sesión\" y \"cerrar programa\".");
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 120, 1160, 380);

        btn1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn1);
        btn1.setBounds(610, 530, 77, 80);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //CÓDIGO A EXPLICAR (Ajustar imagen a un botón)
    public Icon setIcono(String url, JButton boton) {
        ImageIcon icon = new ImageIcon(getClass().getResource(url));
        int ancho = boton.getWidth();
        int alto = boton.getHeight();
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));
        return icono;
    }

    //CÓDIGO A EXPLICAR (Ajustar imagen a un botón)
    public Icon setIconoPresionado(String url, JButton boton, int ancho, int altura) {
        ImageIcon icon = new ImageIcon(getClass().getResource(url));
        int width = boton.getWidth() - ancho;
        int height = boton.getHeight() - altura;
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(width, height, Image.SCALE_DEFAULT));
        return icono;
    }

    //CÓDIGO A EXPLICAR (Quitar borde a un botón)
    public void transparenciaButton() {
        btn1.setOpaque(false);
        btn1.setContentAreaFilled(false);
        btn1.setBorderPainted(false);

    }

    //CÓDIGO INSERTAR IMAGEN DE FONDO (Inserta una imagen de fondo)
    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/imagenes/Rosa.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        InterfazProceso regresar = new InterfazProceso();
        regresar.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Instrucciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Instrucciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Instrucciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Instrucciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Instrucciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
